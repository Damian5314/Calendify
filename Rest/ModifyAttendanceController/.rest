# 1. Login (Om toegang te krijgen tot de andere endpoints)
POST http://localhost:5097/api/v1/Login/Login
Content-Type: application/json

{
  "email": "user2@example.com",
  "password": "123456"
}

###
# 2. Voeg een aanwezigheid toe voor de ingelogde gebruiker
POST http://localhost:5097/api/v1/modify-attendance/book
Content-Type: application/json

{
  "UserId": 1,
  "AttendanceDate": "2023-11-10T00:00:00"
}


###
# 3. Haal de aanwezigheid op van de ingelogde gebruiker
# Dit endpoint bestaat mogelijk niet in je huidige code. Voeg het toe als je het nodig hebt.

GET http://localhost:5097/api/v1/modify-attendance/booked
Content-Type: application/json

{
  "UserId": 1 // Pas het UserId aan indien nodig
}

###
# 4. Bewerk de aanwezigheid van de ingelogde gebruiker
PUT http://localhost:5097/api/v1/modify-attendance/update
Content-Type: application/json

{
  "UserId": 1,  // Gebruik het juiste UserId
  "OldAttendanceDate": "2023-11-10T00:00:00", // De oude datum
  "NewAttendanceDate": "2023-11-11T00:00:00"  // De nieuwe datum
}

###
# 5. Verwijder de aanwezigheid van de ingelogde gebruiker
DELETE http://localhost:5097/api/v1/modify-attendance/delete
Content-Type: application/json

{
  "UserId": 1,  // Gebruik het juiste UserId
  "AttendanceDate": "2023-11-10T00:00:00" // Datum van de aanwezigheid die je wilt verwijderen
}

###
# 6. Probeer een datum te boeken die al bezet is
POST http://localhost:5097/api/v1/modify-attendance/book
Content-Type: application/json

{
  "UserId": 1,  // Gebruik het juiste UserId
  "AttendanceDate": "2023-11-10T00:00:00" // Dezelfde datum om een conflict te simuleren
}
